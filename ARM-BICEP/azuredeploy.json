{  
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
  "parameters": {
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EventHub namespace"
      }
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "consumerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Consumer Group"
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL Server."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password of the SQL Server."
      }
    },
    "transparentDataEncryption": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
      }
    },
    "streamAnalyticsJobName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
      }
    },
    "streamAnalyticsJobName2": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
      }
    },
    "numberOfStreamingUnits": {
      "type": "int",
      "minValue": 1,
      "maxValue": 48,
      "allowedValues": [
        1,
        3,
        6,
        12,
        18,
        24,
        30,
        36,
        42,
        48
      ],
      "metadata": {
        "description": "Number of Streaming Units"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-08-01",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName'), variables('defaultSASKeyName'))]",
    "sqlServerName": "[concat('sqlserver', uniqueString(subscription().id, resourceGroup().id))]",
    "databaseName": "swiftdbprod",
    "databasedwName": "swiftdwprod",
    "databaseEdition": "Basic",
    "databasedwEdition": "DataWarehouse",
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "databaseServiceObjectiveName": "Basic"
    
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('namespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'))]"
          ],
          "properties": {
            "path": "[parameters('eventHubName')]"
          },
          "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "[parameters('consumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {

              }
            }
          ]
        }
      ]
    },

    {
      "apiVersion": "2014-04-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[variables('sqlServerName')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "2015-01-01",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "properties": {
            "edition": "[variables('databaseEdition')]",
            "collation": "[variables('databaseCollation')]",
            "requestedServiceObjectiveName": "[variables('databaseServiceObjectiveName')]"
          },
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "resources": [
            {
              "comments": "Transparent Data Encryption",
              "name": "current",
              "type": "transparentDataEncryption",
              "apiVersion": "2014-04-01-preview",
              "properties": {
                "status": "[parameters('transparentDataEncryption')]"
              },
              "dependsOn": [
                "[variables('databaseName')]"
              ]
            }
          ]
        },
        {
          "name": "AllowAllMicrosoftAzureIps",
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[variables('sqlServerName')]"
          ]
        }
      ],


      "resources": [
        {
          "name": "[variables('databasedwName')]",
          "type": "databases",
          "apiVersion": "2015-01-01",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "properties": {
            "edition": "[variables('databasedwEdition')]",
            "collation": "[variables('databaseCollation')]"

          },
          "dependsOn": [
            "[variables('sqlServerName')]"
          ]

        },
        {
          "name": "AllowAllMicrosoftAzureIps",
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[variables('sqlServerName')]"
          ]
        }
      ],



      "type": "Microsoft.Sql/servers",

      "tags": {
        "displayName": "SqlServer"
      }

    },

    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('streamAnalyticsJobName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          //{
          //  "name": "EntryStream",
          //  "properties": {
          //    "type": "stream",
          //    "serialization": {
          //      "type": "JSON",
          //      "properties": {
          //        "encoding": "UTF8"
          //      }
          //    },
          //    "datasource": {
          //      "type": "Microsoft.ServiceBus/EventHub",
          //      "properties": {
          //        "EventHubName": "[parameters('eventHubName')]",
          //        "ServiceBusNamespace": "[parameters('namespaceName')]",
          //        "SharedAccessPolicyKey": "<sharedaccesspolicykey>",
          //        "SharedAccessPolicyName": "<sharedaccesspolicyname>",
          //        "SourcePartitionCount": 4
          //      }
          //    }
          //  }
          //}
        ],
        "transformation": {
          "name": "SwiftSampleData",
          "properties": {
            "streamingUnits": "[parameters('numberOfStreamingUnits')]",
            //"query": "SELECT\r\n    *\r\nINTO\r\n    SQLSink\r\nFROM\r\n    EntryStream",
            "query": "SELECT\r\n    *\r\nINTO\r\n    [YourOutputAlias]\r\nFROM\r\n    [YourInputAlias]"
          }
        }
        //"outputs": [
        //  {
        //    "name": "SQLSink",
        //    "properties": {
        //      "datasource": {
        //        "type": "Microsoft.Sql/Server/Database",
        //        "properties": {
        //          "server": "[variables('sqlServerName')]",
        //          "database": "[variables('databaseName')]",
        //          "table": "TemperatureAlerts",
        //          "user": "adminuser",
        //          "password": "BigData257!"
        //        }
        //      }
        //    }
        //  }
        //]
      }
    },

    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('streamAnalyticsJobName2')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[parameters('numberOfStreamingUnits')]",
            "query": "SELECT\r\n    *\r\nINTO\r\n    [YourOutputAlias]\r\nFROM\r\n    [YourInputAlias]"
          }
        }
      }
    }




  ],

      "outputs": {
        "NamespaceConnectionString": {
          "type": "string",
          "value": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryConnectionString]"
        },
        "SharedAccessPolicyPrimaryKey": {
          "type": "string",
          "value": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryKey]"
        },
        "sqlServerFqdn": {
          "type": "string",
          "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName]"
        },
        "databaseName": {
          "type": "string",
          "value": "[variables('databaseName')]"
        }
      }

    }